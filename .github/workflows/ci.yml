name: "CI"

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  backend:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12', '3.13']
    steps:
      - uses: actions/checkout@v4

      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip 
          key: ${{ runner.os }}-pip-${{ hashFiles("backend/requirements.txt") }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: "Install dependencies"
        run: |
          python -m pip install --upgrade pip==24.0
          pip install -r backend/requirements.txt
          pip install coverage

      - name: "Lint (flake8)"
        run: pip install flake8==7.0.0 && flake8 backend/

      - name: 'Tests with coverage'
        run: |
          coverage run --source='.' manage.py test
          coverage xml
        working-directory: backend

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: "Set up Node.js"
        uses: actions/setup-node@v4
        with:
          node-version: '20.11.1'

      - name: Cache node modules
        uses: actions/cache@v4 
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles("**/package-lock.json") }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: "Install dependencies"
        run: npm ci
        working-directory: frontend

      - name: "Build frontend"
        run: npm run build
        working-directory: frontend
      
      - name: Upload frontend build artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend/build